"""Configuration settings for the race controller."""
import os
from typing import Dict, List, Set

# AWS IoT Configuration
AWS_IOT_ENDPOINT = os.getenv('AWS_IOT_ENDPOINT', 'your-endpoint.iot.region.amazonaws.com')
AWS_IOT_PORT = int(os.getenv('AWS_IOT_PORT', '8883'))
AWS_IOT_CLIENT_ID = os.getenv('AWS_IOT_CLIENT_ID', 'race-controller')

# MQTT Topics
GAME_STATE_UPDATE_TOPIC = 'GAME_STATE_UPDATE'
CAR_CONTROL_UPDATE_TOPIC = 'CAR_CONTROL_UPDATE'
LAP_TIME_TOPIC = "RACE_LAP_TIME"
RACE_ANALYTICS_TOPIC = "RACE_ANALYTICS"

# Serial Configuration
SERIAL_PORT = os.getenv('SERIAL_PORT', '/dev/ttyUSB0')
SERIAL_BAUDRATE = int(os.getenv('SERIAL_BAUDRATE', '19200'))

# Timing Configuration
MQTT_REFRESH_RATE_MS = 100
SERIAL_REFRESH_RATE_MS = 100
ANALYTICS_REFRESH_RATE_MS = 1000
MAX_QUEUE_SIZE = 50

# Race Configuration
TOTAL_NUMBER_OF_CARS = 6
YELLOW_FLAG_MAX_SPEED = 10
MINIMUM_LAP_TIME_MS = 1500
INITIAL_RACE_ID = "1bb42be6-24cb-41ac-b1d8-955e7bc2f510"

# Game timing
GAME_TICK_MICROSECONDS = 6.4
GAMETICK_IN_MILLISECOND = GAME_TICK_MICROSECONDS / 1000

# Throttle mapping
THROTTLE_SETTINGS: Dict[int, int] = {
    0: 0, 10: 10, 20: 11, 30: 12, 40: 13, 50: 14,
    60: 15, 70: 16, 80: 17, 90: 18, 100: 19
}

# Race states
RACE_STATE_LOBBY = "lobby"
RACE_STATE_PRACTICE = "practice"
RACE_STATE_PENDING = "pending"
RACE_STATE_RED_FLAG = "red_flag"
RACE_STATE_YELLOW_FLAG = "yellow_flag"
RACE_STATE_GREEN_FLAG = "green_flag"
RACE_STATE_CHECKERED_FLAG = "checkered_flag"
RACE_STATE_ABORTED = "aborted"
RACE_STATE_FORMATION_LAPS = "formation_laps"

RACE_STATES: Set[str] = {
    RACE_STATE_LOBBY, RACE_STATE_PRACTICE, RACE_STATE_PENDING,
    RACE_STATE_RED_FLAG, RACE_STATE_YELLOW_FLAG, RACE_STATE_GREEN_FLAG,
    RACE_STATE_CHECKERED_FLAG, RACE_STATE_ABORTED, RACE_STATE_FORMATION_LAPS
}

RACE_DRIVING_STATES: List[str] = [
    RACE_STATE_PRACTICE, RACE_STATE_YELLOW_FLAG, RACE_STATE_GREEN_FLAG
]

# Initial values
INITIAL_INT_ARRAY = [255, 255, 255, 255, 255, 255, 255, 0, 36]

# Formation lap settings
FORMATION_LAP_THROTTLE = 20
FORMATION_LAPS_CARS = {
    i: {"enabled": True, "throttle": FORMATION_LAP_THROTTLE} 
    for i in range(1, TOTAL_NUMBER_OF_CARS + 1)
}